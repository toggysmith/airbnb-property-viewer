#BlueJ class context
comment0.target=DoublyLinkedList
comment0.text=\r\n\ A\ doubly\ linked\ list\ used\ to\ keep\ track\ of\ all\ the\ different\ panes\ in\ our\ application\ and\ the\ order\ in\ which\ they\ are\ accessed\r\n\ The\ head\ and\ tail\ node\ are\ empty\ pointers\ used\ to\ simply\ represent\ the\ beginning\ and\ ending\ of\ the\ order\ of\ panes.\r\n\ If\ the\ last\ pane\ is\ selected\ and\ the\ next\ button\ in\ the\ GUI\ is\ pressed\ then\ the\ application\ loops\ back\ to\ the\ head\ and\ the\ first\ item\ it\ points\ to\r\n\r\n\ @author\ Adam\ Murray\ K21003575\r\n\ @author\ Augusto\ Favero\ K21059800\r\n\ @version\ 11/03/2022\r\n
comment1.params=
comment1.target=DoublyLinkedList()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ CircularLinkedList\r\n
comment2.params=
comment2.target=boolean\ isEmpty()
comment3.params=currentElement
comment3.target=java.lang.Object\ getNextElement(java.lang.Object)
comment3.text=\r\n\ Gets\ the\ next\ element\ from\ the\ list.\r\n\ @param\ the\ current\ element\ as\ a\ relative\ position\ to\ what\ the\ next\ element\ should\ be\r\n\ @return\ The\ next\ element\ in\ the\ list.\r\n
comment4.params=currentElement
comment4.target=java.lang.Object\ getPrevElement(java.lang.Object)
comment5.params=toFindElement
comment5.target=ListNode\ findNode(java.lang.Object)
comment6.params=element
comment6.target=void\ add(java.lang.Object)
comment6.text=\r\n\ Adds\ an\ element\ to\ the\ list.\r\n\ The\ element\ is\ added\ so\ that\ it\ will\ appear\ after\ the\ previously\ added\ element.\r\n\ @param\ element\ The\ element\ to\ be\ added.\r\n
numComments=7
