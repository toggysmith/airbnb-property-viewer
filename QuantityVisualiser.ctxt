#BlueJ class context
comment0.target=QuantityVisualiser
comment0.text=\r\n\ This\ class\ should\ create\ a\ graphical\ representation\r\n\ of\ a\ given\ quantity\ within\ a\ range.\r\n\r\n\ It\ does\ this\ by\ using\ size\ and\ color\ as\ visual\r\n\ indicators.\r\n
comment1.params=startingQuantity\ rangeUpperBound
comment1.target=QuantityVisualiser(long,\ long)
comment1.text=\r\n\ Retrieve\ the\ starting\ current\ quantity\ of\ this\r\n\ visualiser\ and\ the\ (inclusive)\ range.\r\n\r\n\ If\ the\ lower\ bound\ of\ the\ range\ is\ more\ than\r\n\ the\ upper\ bound\ of\ the\ range,\ the\ two\ are\ swapped.\r\n\r\n\ @param\ startingQuantity\ The\ initial\ quantity\ visualised.\r\n\ @param\ rangeUpperBound\ The\ greatest\ quantity\ that\ can\ be\ visualised.\r\n
comment2.params=quantity
comment2.target=boolean\ isWithinRange(long)
comment2.text=\r\n\ Check\ whether\ a\ given\ quantity\ is\ within\ the\r\n\ range\ of\ quantities\ allowed.\r\n\r\n\ @param\ quantity\ The\ quantity\ being\ checked.\r\n
comment3.params=newQuantity
comment3.target=void\ setCurrentQuantity(long)
comment3.text=\r\n\ Set\ the\ current\ quantity.\r\n\r\n\ @param\ newQuantity\ The\ new\ current\ quantity.\r\n
comment4.params=
comment4.target=void\ updateGraphic()
comment4.text=\r\n\ Update\ the\ circle\ graphic\ by\ changing\ its\r\n\ size\ and\ color\ to\ reflect\ the\ quantity.\r\n
numComments=5
