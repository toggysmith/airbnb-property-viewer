#BlueJ class context
comment0.target=ListingProcessor
comment0.text=\n\ Responsible\ for\ providing\ methods\ to\ usefully\ manipulate\ individual\ Airbnb\ listings\ and\ lists\ of\ listings.\n\n\ @author\ Adam\ Murray\ (K21003575)\n\ @author\ Augusto\ Favero\ (K21059800)\n\ @author\ Mathew\ Tran\ (K21074020)\n\ @author\ Tony\ Smith\ (K21064940)\n\ @version\ 1.0.0\n
comment1.params=listings\ boroughName
comment1.target=java.util.List\ filterByBorough(java.util.List,\ java.lang.String)
comment1.text=\n\ Filter\ listings\ to\ only\ include\ those\ in\ a\ specific\ borough.\n\ @param\ listings\ The\ listings\ to\ filter.\n\ @param\ boroughName\ The\ name\ of\ the\ borough\ (neighbourhood)\ to\ check.\n\ @return\ The\ listings\ in\ a\ specific\ borough.\n
comment10.params=listings\ listingName\ boroughName
comment10.target=AirbnbListing\ getPropertyListingByNames(java.util.List,\ java.lang.String,\ java.lang.String)
comment10.text=\n\ Augusto\n
comment11.params=listings
comment11.target=int[]\ getListingPrices(java.util.List)
comment11.text=\n\ Augusto\n
comment12.params=listings
comment12.target=int[]\ getListingReviews(java.util.List)
comment12.text=\n\ Augusto\n
comment13.params=listings
comment13.target=int[]\ getListingMinNights(java.util.List)
comment13.text=\n\ Augusto\n
comment14.params=values
comment14.target=int\ getMin(int[])
comment14.text=\n\ Augusto\n
comment15.params=values
comment15.target=int\ getMax(int[])
comment15.text=\n\ Augusto\n
comment16.params=values\ from\ to
comment16.target=long\ retrieveSpeciedAmount(int[],\ int,\ int)
comment16.text=\n\ Augusto\n
comment17.params=listings
comment17.target=Position\ getAveragePosition(java.util.List)
comment17.text=\n\ @param\ listings\ The\ listings\ to\ be\ sorted\ through.\n\ @return\ A\ Position\ object\ containing\ the\ average\ latitude\ and\ longitude\ of\ the\ listings.\n
comment18.params=listings\ fromPrice\ toPrice
comment18.target=int\ getNumberOfReviews(java.util.List,\ int,\ int)
comment18.text=\n\ Get\ the\ total\ number\ of\ reviews\ for\ all\ properties\ within\ the\ price\ range\n
comment19.params=listings\ fromPrice\ toPrice
comment19.target=long\ getNumberofListings(java.util.List,\ int,\ int)
comment19.text=\n\ Get\ the\ total\ number\ of\ listings\ for\ all\ properties\ within\ the\ price\ range\n
comment2.params=listings\ fromPrice\ toPrice
comment2.target=java.util.List\ filterByPriceRange(java.util.List,\ int,\ int)
comment2.text=\n\ Filter\ listings\ to\ only\ include\ those\ in\ a\ specific\ price\ range.\n\ @param\ listings\ The\ listings\ to\ filter.\n\ @param\ fromPrice\ The\ price\ to\ filter\ from.\n\ @param\ toPrice\ The\ price\ to\ filter\ up\ to.\n\ @return\ The\ filtered\ listings.\n
comment20.params=listings\ fromPrice\ toPrice
comment20.target=long\ getTotalAvailability(java.util.List,\ int,\ int)
comment20.text=\n\ Get\ the\ total\ number\ of\ availability\ for\ all\ properties\ within\ the\ price\ range\n
comment21.params=listings\ roomNeeded\ fromPrice\ toPrice
comment21.target=long\ getNonPrivate(java.util.List,\ java.lang.String,\ int,\ int)
comment21.text=\n\ \ Get\ the\ total\ number\ of\ non\ private\ rooms\ for\ all\ properties\ within\ the\ price\ range\n
comment3.params=listings
comment3.target=int\ getNoOfPropertiesInBoroughWithMost(java.util.List)
comment3.text=\n\ Get\ the\ number\ of\ properties\ in\ the\ borough\ with\ the\ most\ properties.\n\ @param\ listings\ The\ listings\ to\ be\ used\ to\ check.\n\ @return\ The\ number\ of\ properties.\n
comment4.params=
comment4.target=int\ getMaxPropertyPrice()
comment4.text=\n\ @return\ The\ maximum\ property\ price\ or\ zero\ if\ there\ is\ none.\n
comment5.params=id
comment5.target=AirbnbListing\ getListingWithId(java.lang.String)
comment5.text=\n\ This\ finds\ the\ AirbnbListing\ with\ the\ id\ given.\n\ @param\ id\ The\ id\ for\ the\ listing\ you\ you\ want\ to\ find.\n\ @return\ The\ AirbnbListing\ with\ the\ id\ given,\ null\ if\ non\ are\ found.\n
comment6.params=hostListing
comment6.target=java.util.List\ getOtherListingsWithHostId(AirbnbListing)
comment6.text=\n\ This\ gets\ a\ list\ of\ all\ the\ AirbnbListing's\ by\ the\ host\ that\ also\ owns\ the\ paramater\ hostListing,\ not\ including\ the\ hostListing.\n\ @param\ hostListing\ The\ listing\ by\ the\ host\ you\ want\ to\ find\ other\ listings\ for.\n\ @return\ The\ other\ AirbnbListing's\ by\ the\ host\ given.\n
comment7.params=listing
comment7.target=java.util.List\ getBoroughs(java.util.List)
comment7.text=\nThis\ method\ returns\ all\ the\ distinct\ borough\ names\ as\ a\ list\ of\ strings\ relative\ to\ a\ list\ of\ AirbnbListings,\ by\ mapping\ to\ a\ new\ stream,\ the\ listings'\ neighbourhood\ attribute\ (in\ which\ borough\ the\ property\ exists)\n@param\ List<AirbnbListing>\ listing,\ the\ list\ of\ Airbnb\ properties\ to\ parse\n@return\ List<String>,\ a\ string\ containing\ all\ the\ unique\ borough\ names\ present\ in\ the\ list\ of\ AirbnbListing\ properties\n
comment8.params=listings\ boroughName
comment8.target=java.util.List\ getPropertiesNameInBorough(java.util.List,\ java.lang.String)
comment8.text=\n\ Augusto\n
comment9.params=destinations\ borough\ price
comment9.target=java.util.List\ filterDestinations(java.util.List,\ java.lang.String,\ java.lang.String)
comment9.text=\n\ Augusto\n
numComments=22
