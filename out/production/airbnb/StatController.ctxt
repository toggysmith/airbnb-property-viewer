#BlueJ class context
comment0.target=StatController
comment0.text=\n\ StatController\ extends\ Controller\ and\ provides\ the\ GUI\ and\ calculation\ of\ \n\ the\ statistics\ pane\n\n\ @author\ Adam\ Murray\ (K21003575)\n\ @author\ Augusto\ Favero\ (K21059800)\n\ @author\ Mathew\ Tran\ (K21074020)\n\ @author\ Tony\ Smith\ (K21064940)\n\ @version\ 1.0.0\n
comment1.params=
comment1.target=void\ initialize()
comment1.text=\n\ Initializing\ the\ view\ of\ the\ pane\ \ when\ you\ first\ click\ \ onto\ it\n
comment10.params=
comment10.target=int\ nonPrivateRoom()
comment10.text=\n\ returns\ the\ number\ of\ non-private\ rooms\ \ within\ the\ price\ range\n\ (statistic\ 2)\n
comment11.params=
comment11.target=int\ totalAvailableProperties()
comment11.text=\n\ returns\ the\ total\ available\ properties\ within\ the\ price\ range\n\ (statistic\ 3)\n
comment12.params=
comment12.target=java.lang.String\ expensiveNeighbourhood()
comment12.text=\n\ returns\ the\ most\ expensive\ neighbourhood\ within\ that\ price\ range\n\ (statistic\ 4)\n
comment13.params=
comment13.target=java.lang.String\ socialScore()
comment13.text=\n\ returns\ the\ highest\ social\ score\ with\ the\ borough\ name\n\ social\ score\ is\ calculated\ using\ a\ csv\ file\ taken\ from\ the\ government\ website\n\ (statistic\ 8)\n
comment14.params=
comment14.target=java.lang.String\ lowestCrime()
comment14.text=\n\ returns\ the\ borough\ with\ the\ lowest\ crime\ per\ 100,000\ people\ within\ \n\ the\ price\ range\n\ (statistic\ 7)\n
comment2.params=
comment2.target=void\ updateValues()
comment2.text=\n\ This\ method\ is\ called\ to\ update\ the\ statistics\ to\ reflect\ the\ change\ in\ price\ range.\n
comment3.params=
comment3.target=void\ setUpValues()
comment3.text=\n\ Assigning\ the\ value\ of\ the\ statistic\ to\ the\ specific\ function\ it\ correlates\ to\n\ and\ updating\ them\n
comment4.params=
comment4.target=void\ setUpBoxes()
comment4.text=\n\ Updates\ the\ comboboxes\ for\ the\ two\ statistics\ that\ require\ user\ interaction\n
comment5.params=
comment5.target=void\ startStats()
comment5.text=\n\ The\ first\ four\ statistics\ are\ added\ to\ the\ gridpane\ in\ the\ specific\ cell\ labelled\n
comment6.params=
comment6.target=void\ setupQueue()
comment6.text=\n\ A\ double-sided\ queue\ is\ used\ to\ reflect\ the\ order\ of\ the\ buttons\ that\ the\ user\ presses.\n\ If\ the\ right\ button\ (>)\ is\ clicked\ twice\ and\ the\ left\ button\ (<)\ is\ clicked\ twice\ \ \n\ then\ you\ will\ return\ to\ the\ original\ statistic\ that\ was\ shown\n
comment7.params=
comment7.target=void\ setUpStats()
comment7.text=\n\ Setting\ up\ the\ stat\ class\ with\ the\ needed\ components\ and\ corresponding\ statistic\n
comment8.params=unfilteredList
comment8.target=java.util.List\ filterPrice(java.util.List)
comment8.text=\n\ Filters\ the\ list\ to\ only\ include\ properties\ from\ that\ price\ range\n
comment9.params=
comment9.target=java.lang.String\ averagePropertyView()
comment9.text=\n\ Returns\ the\ average\ number\ of\ reviews\ per\ property\ within\ the\ price\ range\n\ (statistic\ 1)\n
numComments=15
