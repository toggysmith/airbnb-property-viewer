#BlueJ class context
comment0.target=ListingProcessor
comment0.text=\r\n\ Responsible\ for\ providing\ methods\ to\ usefully\ manipulate\ individual\ Airbnb\ listings\ and\ lists\ of\ listings.\r\n\r\n\ @author\ Adam\ Murray\ (K21003575)\r\n\ @author\ Augusto\ Favero\ (K21059800)\r\n\ @author\ Mathew\ Tran\ (K21074020)\r\n\ @author\ Tony\ Smith\ (K21064940)\r\n\ @version\ 1.0.0\r\n
comment1.params=listings\ boroughName
comment1.target=java.util.List\ filterByBorough(java.util.List,\ java.lang.String)
comment1.text=\r\n\ Filter\ listings\ to\ only\ include\ those\ in\ a\ specific\ borough.\r\n\ @param\ listings\ The\ listings\ to\ filter.\r\n\ @param\ boroughName\ The\ name\ of\ the\ borough\ (neighbourhood)\ to\ check.\r\n\ @return\ The\ listings\ in\ a\ specific\ borough.\r\n
comment10.params=listings\ listingName\ boroughName
comment10.target=AirbnbListing\ getPropertyListingByNames(java.util.List,\ java.lang.String,\ java.lang.String)
comment10.text=\r\n\ Augusto\r\n
comment11.params=listings
comment11.target=int[]\ getListingPrices(java.util.List)
comment11.text=\r\n\ The\ turns\ all\ the\ AirbnbListings\ to\ an\ array\ of\ their\ prices.\r\n
comment12.params=listings
comment12.target=int[]\ getListingReviews(java.util.List)
comment12.text=\r\n\ The\ turns\ all\ the\ AirbnbListings\ to\ an\ array\ of\ their\ number\ of\ reviews.\r\n
comment13.params=listings
comment13.target=int[]\ getListingMinNights(java.util.List)
comment13.text=\r\n\ Adam\r\n
comment14.params=values
comment14.target=int\ getMin(int[])
comment14.text=\r\n\ Augusto\r\n
comment15.params=values
comment15.target=int\ getMax(int[])
comment15.text=\r\n\ Augusto\r\n
comment16.params=values\ from\ to
comment16.target=long\ retrieveSpeciedAmount(int[],\ int,\ int)
comment16.text=\r\n\ Augusto\r\n
comment17.params=listings
comment17.target=Position\ getAveragePosition(java.util.List)
comment17.text=\r\n\ @param\ listings\ The\ listings\ to\ be\ sorted\ through.\r\n\ @return\ A\ Position\ object\ containing\ the\ average\ latitude\ and\ longitude\ of\ the\ listings.\r\n
comment18.params=listings\ fromPrice\ toPrice
comment18.target=int\ getNumberOfReviews(java.util.List,\ int,\ int)
comment18.text=\r\n\ Get\ the\ total\ number\ of\ reviews\ for\ all\ properties\ within\ the\ price\ range\r\n
comment19.params=listings\ fromPrice\ toPrice
comment19.target=long\ getNumberofListings(java.util.List,\ int,\ int)
comment19.text=\r\n\ Get\ the\ total\ number\ of\ listings\ for\ all\ properties\ within\ the\ price\ range\r\n
comment2.params=listings\ fromPrice\ toPrice
comment2.target=java.util.List\ filterByPriceRange(java.util.List,\ int,\ int)
comment2.text=\r\n\ Filter\ listings\ to\ only\ include\ those\ in\ a\ specific\ price\ range.\r\n\ @param\ listings\ The\ listings\ to\ filter.\r\n\ @param\ fromPrice\ The\ price\ to\ filter\ from.\r\n\ @param\ toPrice\ The\ price\ to\ filter\ up\ to.\r\n\ @return\ The\ filtered\ listings.\r\n
comment20.params=listings\ fromPrice\ toPrice
comment20.target=long\ getTotalAvailability(java.util.List,\ int,\ int)
comment20.text=\r\n\ Get\ the\ total\ number\ of\ availability\ for\ all\ properties\ within\ the\ price\ range\r\n
comment21.params=listings\ roomNeeded\ fromPrice\ toPrice
comment21.target=long\ getNonPrivate(java.util.List,\ java.lang.String,\ int,\ int)
comment21.text=\r\n\ \ Get\ the\ total\ number\ of\ non\ private\ rooms\ for\ all\ properties\ within\ the\ price\ range\r\n
comment22.params=boroughName
comment22.target=boolean\ validBorough(java.lang.String)
comment22.text=\r\n\ method\ to\ check\ that\ the\ borough\ passed\ is\ valid\ in\ relation\ to\ the\ Borough\ enumeration\ class\r\n
comment3.params=listings
comment3.target=int\ getNoOfPropertiesInBoroughWithMost(java.util.List)
comment3.text=\r\n\ Get\ the\ number\ of\ properties\ in\ the\ borough\ with\ the\ most\ properties.\r\n\ @param\ listings\ The\ listings\ to\ be\ used\ to\ check.\r\n\ @return\ The\ number\ of\ properties.\r\n
comment4.params=
comment4.target=int\ getMaxPropertyPrice()
comment4.text=\r\n\ @return\ The\ maximum\ property\ price\ or\ zero\ if\ there\ is\ none.\r\n
comment5.params=id
comment5.target=AirbnbListing\ getListingWithId(java.lang.String)
comment5.text=\r\n\ This\ finds\ the\ AirbnbListing\ with\ the\ id\ given.\r\n\ @param\ id\ The\ id\ for\ the\ listing\ you\ you\ want\ to\ find.\r\n\ @return\ The\ AirbnbListing\ with\ the\ id\ given,\ null\ if\ non\ are\ found.\r\n
comment6.params=hostListing
comment6.target=java.util.List\ getOtherListingsWithHostId(AirbnbListing)
comment6.text=\r\n\ This\ gets\ a\ list\ of\ all\ the\ AirbnbListing's\ by\ the\ host\ that\ also\ owns\ the\ paramater\ hostListing,\ not\ including\ the\ hostListing.\r\n\ @param\ hostListing\ The\ listing\ by\ the\ host\ you\ want\ to\ find\ other\ listings\ for.\r\n\ @return\ The\ other\ AirbnbListing's\ by\ the\ host\ given.\r\n
comment7.params=listing
comment7.target=java.util.List\ getBoroughs(java.util.List)
comment7.text=\r\nThis\ method\ returns\ all\ the\ distinct\ borough\ names\ as\ a\ list\ of\ strings\ relative\ to\ a\ list\ of\ AirbnbListings,\ by\ mapping\ to\ a\ new\ stream,\ the\ listings'\ neighbourhood\ attribute\ (in\ which\ borough\ the\ property\ exists)\r\n@param\ List<AirbnbListing>\ listing,\ the\ list\ of\ Airbnb\ properties\ to\ parse\r\n@return\ List<String>,\ a\ string\ containing\ all\ the\ unique\ borough\ names\ present\ in\ the\ list\ of\ AirbnbListing\ properties\r\n
comment8.params=listings\ boroughName
comment8.target=java.util.List\ getPropertiesNameInBorough(java.util.List,\ java.lang.String)
comment8.text=\r\n\ This\ method\ returns\ a\ list\ of\ strings\ containing\ the\ names\ of\ the\ AirbnbListing\ listings\ that\ have\ the\ same\ borough\ name\ as\ the\ boroughName\ passed\ in\ the\ method.\ \r\n\ @param\ (List<AirbnbListing>\ listings,\ list\ of\ properties\r\n\ @param\ boroughName,\ borough\ name\ on\ which\ the\ properties\ will\ be\ filtered\ on\r\n
comment9.params=destinations\ borough\ price
comment9.target=java.util.List\ filterDestinations(java.util.List,\ java.lang.String,\ java.lang.String)
comment9.text=\r\n\ Augusto\r\n
numComments=23
